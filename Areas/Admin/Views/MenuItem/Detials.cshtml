@model Spice_tedliu.Models.MenuItem

@{
    ViewData["Title"] = "Detials";
}

<br />
<h2 class="text-info">Create MenuItem</h2>
<br />


    <div class="border backgroundWhiteBorder">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Name" class="col-form-label"></label>
            </div>
            <div class="col-5">
                @Html.DisplayName(Model.Name)
            </div>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <!--<div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Description" class="col-form-label"></label>
            </div>
            <div class="col-5">-->
                @*<input asp-for="MenuItem.Description" class="form-control" />*@
                <!--@Html.TextAreaFor(m => m.Description)
            </div>
            <span asp-validation-for="MenuItem.Description" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Price" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input asp-for="MenuItem.Price" class="form-control" />
            </div>
            <span asp-validation-for="MenuItem.Price" class="text-danger"></span>
        </div>

        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Image" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input type="file" name="files" multiple class="form-control" />
            </div>
        </div>


        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.CategoryId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="@Model.CategoryId" id="CategoryId" asp-items="Model.Category.ToSelectListItem(Model.MenuItem.CategoryId)" class="form-control"></select>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.SubCategoryId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="@Model.SubCategoryId" name="SubCategoryId" id="SubCategoryId" asp-items="@(new SelectList(string.Empty,"Id","Name"))" class="form-control"></select>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-2">
                <label asp-for="MenuItem.Spicyness" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="MenuItem.Spicyness" asp-items="Html.GetEnumSelectList<MenuItem.ESpicy>()" class="form-control"></select>
            </div>
        </div>-->
        <div class="form-group row">
            <div class="col-5 offset-2">
                <partial name="_CreateAndBackToListButton" />
            </div>

        </div>
    </div>


@section Scripts{
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ]
        });
    </script>
    <script>
  $(document).ready(function () {
    getSubCategory();
    $('#CategoryId').change(function () {
      getSubCategory();
    })
  })

  function getSubCategory() {
    var url = '@Url.Content("~/")' + "Admin/SubCategory/GetSubCategory";
    var ddlsoruce = '#CategoryId';
    $.getJSON(url, { id: $(ddlsoruce).val() }, function (data) {
      var items = '';
      $('#SubCategoryId').empty();
      $.each(data, function (i, subcategory) {
        items += "<option value='" + subcategory.value + "'>" + subcategory.text + "</option>";
      })
      $('#SubCategoryId').html(items);
    });
  }
    </script>

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}